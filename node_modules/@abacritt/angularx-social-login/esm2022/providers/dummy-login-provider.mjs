import { BaseLoginProvider } from '../entities/base-login-provider';
// Simulates login / logout without actually requiring an Internet connection.
//
// Useful for certain development situations.
//
// For example, if you want to simulate the greatest football referee England has ever produced:
//
//  const dummyUser: SocialUser = {
//     id: '0123456789',
//     name: 'Howard Webb',
//     email: 'howard@webb.com',
//     firstName: 'Howard',
//     lastName: 'Webb',
//     authToken: 'dummyAuthToken',
//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',
//     provider: 'DUMMY',
//     idToken: 'dummyIdToken',
//     authorizationCode: 'dummyAuthCode'
// };
//
//  let config = new AuthServiceConfig([
//  { ... },
//  {
//       id: DummyLoginProvider.PROVIDER_ID,
//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor
//   },
//  { ... }
//  ]);
export class DummyLoginProvider extends BaseLoginProvider {
    static { this.PROVIDER_ID = 'DUMMY'; }
    static { this.DEFAULT_USER = {
        id: '1234567890',
        name: 'Mickey Mouse',
        email: 'mickey@mouse.com',
        firstName: 'Mickey',
        lastName: 'Mouse',
        authToken: 'dummyAuthToken',
        photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',
        provider: 'DUMMY',
        idToken: 'dummyIdToken',
        authorizationCode: 'dummyAuthCode',
        response: {},
    }; }
    constructor(dummy) {
        super();
        if (dummy) {
            this.dummy = dummy;
        }
        else {
            this.dummy = DummyLoginProvider.DEFAULT_USER;
        }
        // Start not logged in
        this.loggedIn = false;
    }
    getLoginStatus() {
        return new Promise((resolve, reject) => {
            if (this.loggedIn) {
                resolve(this.dummy);
            }
            else {
                reject('No user is currently logged in.');
            }
        });
    }
    initialize() {
        return new Promise((resolve, reject) => {
            resolve();
        });
    }
    signIn() {
        return new Promise((resolve, reject) => {
            this.loggedIn = true;
            resolve(this.dummy);
        });
    }
    signOut(revoke) {
        return new Promise((resolve, reject) => {
            this.loggedIn = false;
            resolve();
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVtbXktbG9naW4tcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL3Byb3ZpZGVycy9kdW1teS1sb2dpbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUdwRSw4RUFBOEU7QUFDOUUsRUFBRTtBQUNGLDZDQUE2QztBQUM3QyxFQUFFO0FBQ0YsZ0dBQWdHO0FBQ2hHLEVBQUU7QUFDRixtQ0FBbUM7QUFDbkMsd0JBQXdCO0FBQ3hCLDJCQUEyQjtBQUMzQixnQ0FBZ0M7QUFDaEMsMkJBQTJCO0FBQzNCLHdCQUF3QjtBQUN4QixtQ0FBbUM7QUFDbkMsaUdBQWlHO0FBQ2pHLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFDL0IseUNBQXlDO0FBQ3pDLEtBQUs7QUFDTCxFQUFFO0FBQ0Ysd0NBQXdDO0FBQ3hDLFlBQVk7QUFDWixLQUFLO0FBQ0wsNENBQTRDO0FBQzVDLDRGQUE0RjtBQUM1RixPQUFPO0FBQ1AsV0FBVztBQUNYLE9BQU87QUFFUCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsaUJBQWlCO2FBQ2hDLGdCQUFXLEdBQVcsT0FBTyxDQUFDO2FBRXJDLGlCQUFZLEdBQUc7UUFDN0IsRUFBRSxFQUFFLFlBQVk7UUFDaEIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsS0FBSyxFQUFFLGtCQUFrQjtRQUN6QixTQUFTLEVBQUUsUUFBUTtRQUNuQixRQUFRLEVBQUUsT0FBTztRQUNqQixTQUFTLEVBQUUsZ0JBQWdCO1FBQzNCLFFBQVEsRUFBRSxxREFBcUQ7UUFDL0QsUUFBUSxFQUFFLE9BQU87UUFDakIsT0FBTyxFQUFFLGNBQWM7UUFDdkIsaUJBQWlCLEVBQUUsZUFBZTtRQUNsQyxRQUFRLEVBQUUsRUFBRTtLQUNiLENBQUM7SUFNRixZQUFZLEtBQWtCO1FBQzVCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUNwQjthQUFNO1lBQ0wsSUFBSSxDQUFDLEtBQUssR0FBRyxrQkFBa0IsQ0FBQyxZQUFZLENBQUM7U0FDOUM7UUFFRCxzQkFBc0I7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQztJQUVELGNBQWM7UUFDWixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNyQjtpQkFBTTtnQkFDTCxNQUFNLENBQUMsaUNBQWlDLENBQUMsQ0FBQzthQUMzQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFVBQVU7UUFDUixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLE9BQU8sRUFBRSxDQUFDO1FBQ1osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxPQUFPLENBQUMsTUFBZ0I7UUFDdEIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUNyQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN0QixPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VMb2dpblByb3ZpZGVyIH0gZnJvbSAnLi4vZW50aXRpZXMvYmFzZS1sb2dpbi1wcm92aWRlcic7XHJcbmltcG9ydCB7IFNvY2lhbFVzZXIgfSBmcm9tICcuLi9lbnRpdGllcy9zb2NpYWwtdXNlcic7XHJcblxyXG4vLyBTaW11bGF0ZXMgbG9naW4gLyBsb2dvdXQgd2l0aG91dCBhY3R1YWxseSByZXF1aXJpbmcgYW4gSW50ZXJuZXQgY29ubmVjdGlvbi5cclxuLy9cclxuLy8gVXNlZnVsIGZvciBjZXJ0YWluIGRldmVsb3BtZW50IHNpdHVhdGlvbnMuXHJcbi8vXHJcbi8vIEZvciBleGFtcGxlLCBpZiB5b3Ugd2FudCB0byBzaW11bGF0ZSB0aGUgZ3JlYXRlc3QgZm9vdGJhbGwgcmVmZXJlZSBFbmdsYW5kIGhhcyBldmVyIHByb2R1Y2VkOlxyXG4vL1xyXG4vLyAgY29uc3QgZHVtbXlVc2VyOiBTb2NpYWxVc2VyID0ge1xyXG4vLyAgICAgaWQ6ICcwMTIzNDU2Nzg5JyxcclxuLy8gICAgIG5hbWU6ICdIb3dhcmQgV2ViYicsXHJcbi8vICAgICBlbWFpbDogJ2hvd2FyZEB3ZWJiLmNvbScsXHJcbi8vICAgICBmaXJzdE5hbWU6ICdIb3dhcmQnLFxyXG4vLyAgICAgbGFzdE5hbWU6ICdXZWJiJyxcclxuLy8gICAgIGF1dGhUb2tlbjogJ2R1bW15QXV0aFRva2VuJyxcclxuLy8gICAgIHBob3RvVXJsOiAnaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSG93YXJkX1dlYmIjL21lZGlhL0ZpbGU6SG93YXJkX1dlYmJfbWFyY2gxMS5qcGcnLFxyXG4vLyAgICAgcHJvdmlkZXI6ICdEVU1NWScsXHJcbi8vICAgICBpZFRva2VuOiAnZHVtbXlJZFRva2VuJyxcclxuLy8gICAgIGF1dGhvcml6YXRpb25Db2RlOiAnZHVtbXlBdXRoQ29kZSdcclxuLy8gfTtcclxuLy9cclxuLy8gIGxldCBjb25maWcgPSBuZXcgQXV0aFNlcnZpY2VDb25maWcoW1xyXG4vLyAgeyAuLi4gfSxcclxuLy8gIHtcclxuLy8gICAgICAgaWQ6IER1bW15TG9naW5Qcm92aWRlci5QUk9WSURFUl9JRCxcclxuLy8gICAgICAgcHJvdmlkZXI6IG5ldyBEdW1teUxvZ2luUHJvdmlkZXIoZHVtbXlVc2VyKSAgLy8gUGFzcyB5b3VyIHVzZXIgaW50byB0aGUgY29uc3RydWN0b3JcclxuLy8gICB9LFxyXG4vLyAgeyAuLi4gfVxyXG4vLyAgXSk7XHJcblxyXG5leHBvcnQgY2xhc3MgRHVtbXlMb2dpblByb3ZpZGVyIGV4dGVuZHMgQmFzZUxvZ2luUHJvdmlkZXIge1xyXG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgUFJPVklERVJfSUQ6IHN0cmluZyA9ICdEVU1NWSc7XHJcblxyXG4gIHN0YXRpYyByZWFkb25seSBERUZBVUxUX1VTRVIgPSB7XHJcbiAgICBpZDogJzEyMzQ1Njc4OTAnLFxyXG4gICAgbmFtZTogJ01pY2tleSBNb3VzZScsXHJcbiAgICBlbWFpbDogJ21pY2tleUBtb3VzZS5jb20nLFxyXG4gICAgZmlyc3ROYW1lOiAnTWlja2V5JyxcclxuICAgIGxhc3ROYW1lOiAnTW91c2UnLFxyXG4gICAgYXV0aFRva2VuOiAnZHVtbXlBdXRoVG9rZW4nLFxyXG4gICAgcGhvdG9Vcmw6ICdodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9GaWxlOk1pY2tleV9Nb3VzZS5wbmcnLFxyXG4gICAgcHJvdmlkZXI6ICdEVU1NWScsXHJcbiAgICBpZFRva2VuOiAnZHVtbXlJZFRva2VuJyxcclxuICAgIGF1dGhvcml6YXRpb25Db2RlOiAnZHVtbXlBdXRoQ29kZScsXHJcbiAgICByZXNwb25zZToge30sXHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBkdW1teTogU29jaWFsVXNlcjtcclxuXHJcbiAgcHJpdmF0ZSBsb2dnZWRJbjogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoZHVtbXk/OiBTb2NpYWxVc2VyKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgaWYgKGR1bW15KSB7XHJcbiAgICAgIHRoaXMuZHVtbXkgPSBkdW1teTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZHVtbXkgPSBEdW1teUxvZ2luUHJvdmlkZXIuREVGQVVMVF9VU0VSO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFN0YXJ0IG5vdCBsb2dnZWQgaW5cclxuICAgIHRoaXMubG9nZ2VkSW4gPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIGdldExvZ2luU3RhdHVzKCk6IFByb21pc2U8U29jaWFsVXNlcj4ge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgaWYgKHRoaXMubG9nZ2VkSW4pIHtcclxuICAgICAgICByZXNvbHZlKHRoaXMuZHVtbXkpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlamVjdCgnTm8gdXNlciBpcyBjdXJyZW50bHkgbG9nZ2VkIGluLicpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGluaXRpYWxpemUoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICByZXNvbHZlKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHNpZ25JbigpOiBQcm9taXNlPFNvY2lhbFVzZXI+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIHRoaXMubG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICByZXNvbHZlKHRoaXMuZHVtbXkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzaWduT3V0KHJldm9rZT86IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIHRoaXMubG9nZ2VkSW4gPSBmYWxzZTtcclxuICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==